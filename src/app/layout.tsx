import { makeStore, RootState } from "@/lib/store";
import { todoApi } from "@/services/todos";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import StoreProvider from "./StoreProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function getLayoutData(): Promise<Partial<RootState>> {
  try {
    const store = makeStore();

    await store.dispatch(todoApi.endpoints.getTodoList.initiate({ start: 0, limit: 5 }));
    return store.getState();
  } catch (error) {
    console.error('Error pre-fetching data for layout: ', error);
    return {};
  }
}

export default async function RootLayout({
  children,
}: Readonly<{children: React.ReactNode}>
) {

  const preloadedState = await getLayoutData();
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <StoreProvider preloadedState={preloadedState}>
          {children}
        </StoreProvider>
      </body>
    </html>
  );
}
